{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    boards: [{\n      id: 1,\n      name: 'trello1'\n    }, {\n      id: 2,\n      name: 'trello2'\n    }, {\n      id: 3,\n      name: 'trello2'\n    }],\n    columns: [{\n      id: 1,\n      title: 'backlog'\n    }, {\n      id: 2,\n      title: 'todo'\n    }, {\n      id: 3,\n      title: 'doing'\n    }],\n    cards: [1, 2, 3]\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload);\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id;\n      });\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload);\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id;\n      });\n    } //move card?\n\n  }\n});\nexport const {\n  addColumn,\n  removeColumn,\n  addCard,\n  removeCard\n} = dashboardSlice.actions;\nexport const addBoardFunc = board => dispatch => {\n  dispatch(addBoard(board));\n};\nexport const removeBoardFunc = board => dispatch => {\n  dispatch(removeBoard(board));\n};\nexport const addColumnFunc = column => dispatch => {\n  dispatch(addColumn(column));\n};\nexport const removeColumnFunc = column => dispatch => {\n  dispatch(removeColumn(column));\n};\nexport const addCardFunc = card => dispatch => {\n  dispatch(addCard(card));\n};\nexport const removeCardFunc = card => dispatch => {\n  dispatch(removeCard(card));\n};\nexport const selectColumns = state => state.dashboard.columns;\nexport const selectCards = state => state.dashboard.cards;\nexport default dashboardSlice.reducer;","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/dashboard/dashboardSlice.js"],"names":["createSlice","dashboardSlice","name","initialState","boards","id","columns","title","cards","reducers","addColumn","state","action","push","payload","removeColumn","filter","column","addCard","removeCard","card","actions","addBoardFunc","board","dispatch","addBoard","removeBoardFunc","removeBoard","addColumnFunc","removeColumnFunc","addCardFunc","removeCardFunc","selectColumns","dashboard","selectCards","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    boards: [{id: 1, name: 'trello1'}, {id: 2, name: 'trello2'}, {id: 3, name: 'trello2'}],\n    columns: [{id: 1, title: 'backlog'}, {id: 2, title: 'todo'}, {id: 3, title: 'doing'}],\n    cards: [1, 2, 3],\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload)\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id\n      })\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload)\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id\n      })\n    }\n    //move card?\n  },\n})\n\n\nexport const { addColumn, removeColumn, addCard, removeCard } = dashboardSlice.actions\n\nexport const addBoardFunc = (board) => (dispatch) => {\n  dispatch(addBoard(board))\n}\n\nexport const removeBoardFunc = (board) => (dispatch) => {\n  dispatch(removeBoard(board))\n}\n\nexport const addColumnFunc = (column) => (dispatch) => {\n  dispatch(addColumn(column))\n}\n\nexport const removeColumnFunc = (column) => (dispatch) => {\n  dispatch(removeColumn(column))\n}\n\nexport const addCardFunc = (card) => (dispatch) => {\n  dispatch(addCard(card))\n}\n\nexport const removeCardFunc = (card) => (dispatch) => {\n  dispatch(removeCard(card))\n}\n\n\nexport const selectColumns = state => state.dashboard.columns;\n\nexport const selectCards = state => state.dashboard.cards;\n\n\nexport default dashboardSlice.reducer"]},"metadata":{},"sourceType":"module"}