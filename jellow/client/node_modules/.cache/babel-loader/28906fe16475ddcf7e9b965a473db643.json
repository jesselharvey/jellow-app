{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState: {\n    username: [],\n    password: []\n  },\n  reducers: {}\n}); // export const { increment, decrement, incrementByAmount } = loginSlice.actions;\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n}; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCount = state => state.counter.value;\nexport default loginSlice.reducer; // import { createSlice } from 'react'\n// export const loginSlice = createSlice({\n//   name: 'login',\n//   initialState: {\n// username: [],\n// password: [],\n//   },\n//   reducers: {\n//   }\n// })\n// export const {} = loginSlice.actions\n// export default loginSlice.reducer","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/login/loginSlice.js"],"names":["createSlice","loginSlice","name","initialState","username","password","reducers","incrementAsync","amount","dispatch","setTimeout","incrementByAmount","selectCount","state","counter","value","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AAN0B,CAAD,CAA9B,C,CAWP;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAIC,QAAQ,IAAI;AAClDC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAACE,iBAAiB,CAACH,MAAD,CAAlB,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CAJM,C,CAMP;AACA;AACA;;AACA,OAAO,MAAMI,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,KAA3C;AAEP,eAAed,UAAU,CAACe,OAA1B,C,CAEA;AAEA;AACA;AACA;AACI;AACA;AACJ;AACA;AAEA;AACA;AAEA;AAEA","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState: {\n    username: [],\n    password: [],\n  },\n  reducers: {\n    \n  },\n});\n\n// export const { increment, decrement, incrementByAmount } = loginSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = state => state.counter.value;\n\nexport default loginSlice.reducer;\n\n// import { createSlice } from 'react'\n\n// export const loginSlice = createSlice({\n//   name: 'login',\n//   initialState: {\n    // username: [],\n    // password: [],\n//   },\n//   reducers: {\n\n//   }\n// })\n\n// export const {} = loginSlice.actions\n\n// export default loginSlice.reducer"]},"metadata":{},"sourceType":"module"}