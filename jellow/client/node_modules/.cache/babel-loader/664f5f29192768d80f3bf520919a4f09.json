{"ast":null,"code":"var _jsxFileName = \"/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/components/Board.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectColumns, selectCards, fetchColumns } from '../dashboard/dashboardSlice';\nimport { Column } from '../components/Column';\nimport { NavBar } from '../'; // import { \n// AddListButton,\n// ConfAddListButton,\n// AddCardButton,\n// ConfAddCardButton\n// } from '../components/Buttons'\n\nimport { ColumnInput } from '../components/Inputs';\nexport function Board() {\n  const columns = useSelector(selectColumns);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchColumns());\n  }, [dispatch]); // const dispatch = useDispatch()\n\n  const cards = useSelector(selectCards); // console.log(cards)\n  // console.log(columns)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"boardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(Column, {\n    column: column,\n    id: column.id,\n    title: column.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }) // <div className=\"column\" key={column.id}>\n  //     <h4>{column.title}</h4><br />\n  //     {cards.map((card) => (\n  //       card.column_id === column.id ?\n  //       <div>\n  //         <span>{card.content}</span>\n  //       </div> :\n  //       \"\"\n  //     ))}\n  //   </div>\n  ), /*#__PURE__*/React.createElement(ColumnInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/components/Board.js"],"names":["React","useEffect","useSelector","useDispatch","selectColumns","selectCards","fetchColumns","Column","NavBar","ColumnInput","Board","columns","dispatch","cards","map","column","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,YAArC,QAAyD,6BAAzD;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,KAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAQ,SAASC,KAAT,GAAiB;AACvB,QAAMC,OAAO,GAAGT,WAAW,CAACE,aAAD,CAA3B;AAEA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACD,GAFQ,EAEN,CAACM,QAAD,CAFM,CAAT,CAJuB,CAQvB;;AACA,QAAMC,KAAK,GAAGX,WAAW,CAACG,WAAD,CAAzB,CATuB,CAUvB;AACA;;AACA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIM,OAAO,CAACG,GAAR,CAAaC,MAAD,iBACX,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,MAAhB;AAAwB,IAAA,EAAE,EAAEA,MAAM,CAACC,EAAnC;AAAuC,IAAA,KAAK,EAAED,MAAM,CAACE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXE,GAFJ,eAeE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectColumns, selectCards, fetchColumns } from '../dashboard/dashboardSlice'\nimport { Column } from '../components/Column'\nimport { NavBar } from '../'\n// import { \n// AddListButton,\n// ConfAddListButton,\n// AddCardButton,\n// ConfAddCardButton\n// } from '../components/Buttons'\nimport { ColumnInput } from '../components/Inputs'\n\n\nexport  function Board() {\n  const columns = useSelector(selectColumns)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchColumns())\n  }, [dispatch])\n\n  // const dispatch = useDispatch()\n  const cards = useSelector(selectCards)\n  // console.log(cards)\n  // console.log(columns)\n  return (\n    <div id=\"boardContainer\">\n      {/* <Column /> */}\n       {columns.map((column) => (\n         <Column column={column} id={column.id} title={column.title}/>\n      // <div className=\"column\" key={column.id}>\n      //     <h4>{column.title}</h4><br />\n      //     {cards.map((card) => (\n      //       card.column_id === column.id ?\n      //       <div>\n      //         <span>{card.content}</span>\n      //       </div> :\n      //       \"\"\n      //     ))}\n      //   </div>\n      ))} \n      <ColumnInput />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}