{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    boards: [{\n      id: 1,\n      name: ''\n    }],\n    columns: [{\n      id: 1,\n      title: 'backlog'\n    }, {\n      id: 2,\n      title: 'todo'\n    }, {\n      id: 3,\n      title: 'doing'\n    }],\n    cards: [1, 2, 3]\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.boards = state.boards.push(action.payload);\n    },\n    removeBoard: (state, action) => {\n      state.boards = state.boards.filter(board => {\n        return board.id !== action.payload.id;\n      });\n    },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload);\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id;\n      });\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload);\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id;\n      });\n    } //move card?\n\n  }\n});\nexport const {\n  addColumn,\n  removeColumn,\n  addCard,\n  removeCard\n} = dashboardSlice.actions;\nexport const addBoardFunc = board => dispatch => {\n  dispatch(addBoard(board));\n};\nexport const addColumnFunc = column => dispatch => {\n  dispatch(addColumn(column));\n};\nexport const removeColumnFunc = column => dispatch => {\n  dispatch(removeColumn(column));\n};\nexport const addCardFunc = card => dispatch => {\n  dispatch(addCard(card));\n};\nexport const removeCardFunc = card => dispatch => {\n  dispatch(removeCard(card));\n};\nexport const selectColumns = state => state.dashboard.columns;\nexport const selectCards = state => state.dashboard.cards;\nexport default dashboardSlice.reducer;","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/dashboard/dashboardSlice.js"],"names":["createSlice","dashboardSlice","name","initialState","boards","id","columns","title","cards","reducers","addBoard","state","action","push","payload","removeBoard","filter","board","addColumn","removeColumn","column","addCard","removeCard","card","actions","addBoardFunc","dispatch","addColumnFunc","removeColumnFunc","addCardFunc","removeCardFunc","selectColumns","dashboard","selectCards","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    boards: [{id: 1, name: ''}],\n    columns: [{id: 1, title: 'backlog'}, {id: 2, title: 'todo'}, {id: 3, title: 'doing'}],\n    cards: [1, 2, 3],\n  },\n  reducers: {\n    addBoard: (state, action) => {\n      state.boards = state.boards.push(action.payload)\n    },\n    removeBoard: (state, action) => {\n      state.boards = state.boards.filter(board => {\n        return board.id !== action.payload.id\n      })\n    },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload)\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id\n      })\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload)\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id\n      })\n    }\n    //move card?\n  },\n})\n\n\nexport const { addColumn, removeColumn, addCard, removeCard } = dashboardSlice.actions\n\nexport const addBoardFunc = (board) => (dispatch) => {\n  dispatch(addBoard(board))\n}\n\nexport const addColumnFunc = (column) => (dispatch) => {\n  dispatch(addColumn(column))\n}\n\nexport const removeColumnFunc = (column) => (dispatch) => {\n  dispatch(removeColumn(column))\n}\n\nexport const addCardFunc = (card) => (dispatch) => {\n  dispatch(addCard(card))\n}\n\nexport const removeCardFunc = (card) => (dispatch) => {\n  dispatch(removeCard(card))\n}\n\n\nexport const selectColumns = state => state.dashboard.columns;\n\nexport const selectCards = state => state.dashboard.cards;\n\n\nexport default dashboardSlice.reducer"]},"metadata":{},"sourceType":"module"}