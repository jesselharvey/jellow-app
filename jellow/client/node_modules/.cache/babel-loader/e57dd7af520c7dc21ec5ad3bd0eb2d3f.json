{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    users: [{\n      id: 1,\n      name: 'guy1',\n      img: \"https://images.alexonsager.net/pokemon/fused/135/135.134.png\"\n    }, {\n      id: 2,\n      name: 'guy2',\n      img: \"https://images.alexonsager.net/pokemon/fused/79/79.93.png\"\n    }, {\n      id: 3,\n      name: 'girl1',\n      img: \"https://images.alexonsager.net/pokemon/fused/68/68.48.png\"\n    }],\n    // boards: [{id: 1, name: 'trello1'}, {id: 2, name: 'trello2'}, {id: 3, name: 'trello3'}],\n    columns: [],\n    //[{id: 1, title: 'backlog'}, {id: 2, title: 'todo'}, {id: 3, title: 'doing'}],\n    cards: [] // [\n    // {id: 1, content: 'card1', column_id: 1},\n    // {id: 2, content: 'card2', column_id: 1},\n    // {id: 3, content: 'ssdada', column_id: 1},\n    // {id: 4, content: 'card21', column_id: 1},\n    // {id: 11, content: 'card1', column_id: 1},\n    // {id: 12, content: 'card2', column_id: 1},\n    // {id: 13, content: 'ssdada', column_id: 1},\n    // {id: 14, content: 'card21', column_id: 1},\n    // {id: 5, content: 'card132', column_id: 1},\n    // {id: 6, content: 'card113', column_id: 1},\n    // {id: 7, content: 'card1sss', column_id: 1},\n    // {id: 8, content: 'card1234', column_id: 1},\n    // {id: 9, content: 'card144444', column_id: 1},\n    // {id: 15, content: 'card132', column_id: 1},\n    // {id: 16, content: 'card113', column_id: 1},\n    // {id: 17, content: 'card1sss', column_id: 1},\n    // {id: 18, content: 'card1234', column_id: 1},\n    // {id: 19, content: 'card144444', column_id: 1}\n    // ],\n\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    AsyncFetchColumns: (state, action) => {},\n    addColumnFunc: (state, action) => {\n      state.columns.push(action.payload);\n    },\n    removeColumnFunc: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id;\n      });\n    },\n    addCard: (state, action) => {\n      state.cards.push(action.payload);\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id;\n      });\n    } //move card?\n\n  }\n});\nexport const {\n  addColumnFunc,\n  removeColumnFunc,\n  addCard,\n  removeCard\n} = dashboardSlice.actions; // export const addBoardFunc = (board) => (dispatch) => {\n//   dispatch(addBoard(board))\n// }\n// export const removeBoardFunc = (board) => (dispatch) => {\n//   dispatch(removeBoard(board))\n// }\n\nexport const addColumn = text => dispatch => {\n  axios.post('/api/board', {\n    id: 5,\n    title: text\n  }).then(res => {\n    console.log(res.data);\n    dispatch(addColumnFunc(res.data));\n  });\n};\nexport const removeColumn = column => dispatch => {\n  axios.delete('/api/board/' + column.id).then(resp => {\n    console.log(resp);\n    dispatch(removeColumnFunc(column));\n  });\n};\nexport const addCardFunc = card => dispatch => {\n  dispatch(addCard(card));\n};\nexport const removeCardFunc = card => dispatch => {\n  dispatch(removeCard(card));\n};\nexport const selectColumns = state => state.dashboard.columns;\nexport const selectCards = state => state.dashboard.cards;\nexport const selectUsers = state => state.dashboard.users;\nexport default dashboardSlice.reducer;","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/dashboard/dashboardSlice.js"],"names":["createSlice","axios","dashboardSlice","name","initialState","users","id","img","columns","cards","reducers","AsyncFetchColumns","state","action","addColumnFunc","push","payload","removeColumnFunc","filter","column","addCard","removeCard","card","actions","addColumn","text","dispatch","post","title","then","res","console","log","data","removeColumn","delete","resp","addCardFunc","removeCardFunc","selectColumns","dashboard","selectCards","selectUsers","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    users: [\n    {id: 1, name: 'guy1', img: \"https://images.alexonsager.net/pokemon/fused/135/135.134.png\"},\n    {id: 2, name: 'guy2', img: \"https://images.alexonsager.net/pokemon/fused/79/79.93.png\"},\n    {id: 3, name: 'girl1', img: \"https://images.alexonsager.net/pokemon/fused/68/68.48.png\"}],\n    // boards: [{id: 1, name: 'trello1'}, {id: 2, name: 'trello2'}, {id: 3, name: 'trello3'}],\n    columns: [], //[{id: 1, title: 'backlog'}, {id: 2, title: 'todo'}, {id: 3, title: 'doing'}],\n    cards: []\n    // [\n      // {id: 1, content: 'card1', column_id: 1},\n      // {id: 2, content: 'card2', column_id: 1},\n      // {id: 3, content: 'ssdada', column_id: 1},\n      // {id: 4, content: 'card21', column_id: 1},\n      // {id: 11, content: 'card1', column_id: 1},\n      // {id: 12, content: 'card2', column_id: 1},\n      // {id: 13, content: 'ssdada', column_id: 1},\n      // {id: 14, content: 'card21', column_id: 1},\n      // {id: 5, content: 'card132', column_id: 1},\n      // {id: 6, content: 'card113', column_id: 1},\n      // {id: 7, content: 'card1sss', column_id: 1},\n      // {id: 8, content: 'card1234', column_id: 1},\n      // {id: 9, content: 'card144444', column_id: 1},\n      // {id: 15, content: 'card132', column_id: 1},\n      // {id: 16, content: 'card113', column_id: 1},\n      // {id: 17, content: 'card1sss', column_id: 1},\n      // {id: 18, content: 'card1234', column_id: 1},\n      // {id: 19, content: 'card144444', column_id: 1}\n    // ],\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    AsyncFetchColumns: (state, action) => {\n\n    },\n\n    addColumnFunc: (state, action) => {\n      state.columns.push(action.payload)\n    },\n\n    removeColumnFunc: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id\n      })\n    },\n\n    addCard: (state, action) => {\n      state.cards.push(action.payload)\n    },\n\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id\n      })\n    }\n    //move card?\n  },\n})\n\n\nexport const { addColumnFunc, removeColumnFunc, addCard, removeCard } = dashboardSlice.actions\n\n// export const addBoardFunc = (board) => (dispatch) => {\n//   dispatch(addBoard(board))\n// }\n\n// export const removeBoardFunc = (board) => (dispatch) => {\n//   dispatch(removeBoard(board))\n// }\n\nexport const addColumn = (text) => (dispatch) => {\n  axios.post('/api/board', {id: 5, title: text}).then(res => {\n    console.log(res.data)\n    dispatch(addColumnFunc(res.data))\n\n  })\n}\n\nexport const removeColumn = (column) => (dispatch) => {\n  axios.delete('/api/board/' + column.id).then((resp) => {\n    console.log(resp)\n    dispatch(removeColumnFunc(column))\n\n  })\n}\n\nexport const addCardFunc = (card) => (dispatch) => {\n  dispatch(addCard(card))\n}\n\nexport const removeCardFunc = (card) => (dispatch) => {\n  dispatch(removeCard(card))\n}\n\n\nexport const selectColumns = state => state.dashboard.columns;\n\nexport const selectCards = state => state.dashboard.cards;\n\nexport const selectUsers = state => state.dashboard.users;\n\nexport default dashboardSlice.reducer"]},"metadata":{},"sourceType":"module"}