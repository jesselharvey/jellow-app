{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    users: [{\n      id: 1,\n      name: 'guy1',\n      img: \"https://images.alexonsager.net/pokemon/fused/135/135.134.png\"\n    }, {\n      id: 2,\n      name: 'guy2',\n      img: \"https://images.alexonsager.net/pokemon/fused/79/79.93.png\"\n    }, {\n      id: 3,\n      name: 'girl1',\n      img: \"https://images.alexonsager.net/pokemon/fused/68/68.48.png\"\n    }],\n    // boards: [{id: 1, name: 'trello1'}, {id: 2, name: 'trello2'}, {id: 3, name: 'trello3'}],\n    columns: [{\n      id: 1,\n      title: 'backlog'\n    }, {\n      id: 2,\n      title: 'todo'\n    }, {\n      id: 3,\n      title: 'doing'\n    }],\n    cards: [{\n      id: 1,\n      content: 'card1',\n      column_id: 1\n    }, {\n      id: 2,\n      content: 'card2',\n      column_id: 1\n    }, {\n      id: 3,\n      content: 'ssdada',\n      column_id: 1\n    }, {\n      id: 4,\n      content: 'card21',\n      column_id: 1\n    }, {\n      id: 11,\n      content: 'card1',\n      column_id: 1\n    }, {\n      id: 12,\n      content: 'card2',\n      column_id: 1\n    }, {\n      id: 13,\n      content: 'ssdada',\n      column_id: 1\n    }, {\n      id: 14,\n      content: 'card21',\n      column_id: 1\n    }, {\n      id: 5,\n      content: 'card132',\n      column_id: 1\n    }, {\n      id: 6,\n      content: 'card113',\n      column_id: 1\n    }, {\n      id: 7,\n      content: 'card1sss',\n      column_id: 1\n    }, {\n      id: 8,\n      content: 'card1234',\n      column_id: 1\n    }, {\n      id: 9,\n      content: 'card144444',\n      column_id: 1\n    }, {\n      id: 15,\n      content: 'card132',\n      column_id: 1\n    }, {\n      id: 16,\n      content: 'card113',\n      column_id: 1\n    }, {\n      id: 17,\n      content: 'card1sss',\n      column_id: 1\n    }, {\n      id: 18,\n      content: 'card1234',\n      column_id: 1\n    }, {\n      id: 19,\n      content: 'card144444',\n      column_id: 1\n    }]\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload);\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id;\n      });\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload);\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id;\n      });\n    } //move card?\n\n  }\n});\nexport const {\n  addColumn,\n  removeColumn,\n  addCard,\n  removeCard\n} = dashboardSlice.actions; // export const addBoardFunc = (board) => (dispatch) => {\n//   dispatch(addBoard(board))\n// }\n// export const removeBoardFunc = (board) => (dispatch) => {\n//   dispatch(removeBoard(board))\n// }\n\nexport const addColumnFunc = column => dispatch => {\n  dispatch(addColumn(column));\n};\nexport const removeColumnFunc = column => dispatch => {\n  dispatch(removeColumn(column));\n};\nexport const addCardFunc = card => dispatch => {\n  dispatch(addCard(card));\n};\nexport const removeCardFunc = card => dispatch => {\n  dispatch(removeCard(card));\n};\nexport const selectColumns = state => state.dashboard.columns;\nexport const selectCards = state => state.dashboard.cards;\nexport const selectUsers = state => state.dashboard.users;\nexport default dashboardSlice.reducer;","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/jellow-app/jellow/client/src/features/dashboard/dashboardSlice.js"],"names":["createSlice","dashboardSlice","name","initialState","users","id","img","columns","title","cards","content","column_id","reducers","addColumn","state","action","push","payload","removeColumn","filter","column","addCard","removeCard","card","actions","addColumnFunc","dispatch","removeColumnFunc","addCardFunc","removeCardFunc","selectColumns","dashboard","selectCards","selectUsers","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState: {\n    users: [\n    {id: 1, name: 'guy1', img: \"https://images.alexonsager.net/pokemon/fused/135/135.134.png\"},\n    {id: 2, name: 'guy2', img: \"https://images.alexonsager.net/pokemon/fused/79/79.93.png\"},\n    {id: 3, name: 'girl1', img: \"https://images.alexonsager.net/pokemon/fused/68/68.48.png\"}],\n    // boards: [{id: 1, name: 'trello1'}, {id: 2, name: 'trello2'}, {id: 3, name: 'trello3'}],\n    columns: [{id: 1, title: 'backlog'}, {id: 2, title: 'todo'}, {id: 3, title: 'doing'}],\n    cards: [\n      {id: 1, content: 'card1', column_id: 1},\n      {id: 2, content: 'card2', column_id: 1},\n      {id: 3, content: 'ssdada', column_id: 1},\n      {id: 4, content: 'card21', column_id: 1},\n      {id: 11, content: 'card1', column_id: 1},\n      {id: 12, content: 'card2', column_id: 1},\n      {id: 13, content: 'ssdada', column_id: 1},\n      {id: 14, content: 'card21', column_id: 1},\n      {id: 5, content: 'card132', column_id: 1},\n      {id: 6, content: 'card113', column_id: 1},\n      {id: 7, content: 'card1sss', column_id: 1},\n      {id: 8, content: 'card1234', column_id: 1},\n      {id: 9, content: 'card144444', column_id: 1},\n      {id: 15, content: 'card132', column_id: 1},\n      {id: 16, content: 'card113', column_id: 1},\n      {id: 17, content: 'card1sss', column_id: 1},\n      {id: 18, content: 'card1234', column_id: 1},\n      {id: 19, content: 'card144444', column_id: 1}\n    ],\n  },\n  reducers: {\n    // addBoard: (state, action) => {\n    //   state.boards = state.boards.push(action.payload)\n    // },\n    // removeBoard: (state, action) => {\n    //   state.boards = state.boards.filter(board => {\n    //     return board.id !== action.payload.id\n    //   })\n    // },\n    addColumn: (state, action) => {\n      state.columns = state.columns.push(action.payload)\n    },\n    removeColumn: (state, action) => {\n      state.columns = state.columns.filter(column => {\n        return column.id !== action.payload.id\n      })\n    },\n    addCard: (state, action) => {\n      state.cards = state.cards.push(action.payload)\n    },\n    removeCard: (state, action) => {\n      state.cards = state.cards.filter(card => {\n        return card.id !== action.payload.id\n      })\n    }\n    //move card?\n  },\n})\n\n\nexport const { addColumn, removeColumn, addCard, removeCard } = dashboardSlice.actions\n\n// export const addBoardFunc = (board) => (dispatch) => {\n//   dispatch(addBoard(board))\n// }\n\n// export const removeBoardFunc = (board) => (dispatch) => {\n//   dispatch(removeBoard(board))\n// }\n\nexport const addColumnFunc = (column) => (dispatch) => {\n  dispatch(addColumn(column))\n}\n\nexport const removeColumnFunc = (column) => (dispatch) => {\n  dispatch(removeColumn(column))\n}\n\nexport const addCardFunc = (card) => (dispatch) => {\n  dispatch(addCard(card))\n}\n\nexport const removeCardFunc = (card) => (dispatch) => {\n  dispatch(removeCard(card))\n}\n\n\nexport const selectColumns = state => state.dashboard.columns;\n\nexport const selectCards = state => state.dashboard.cards;\n\nexport const selectUsers = state => state.dashboard.users;\n\nexport default dashboardSlice.reducer"]},"metadata":{},"sourceType":"module"}